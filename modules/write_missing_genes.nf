process WRITE_MISSING_GENES {
    publishDir "${params.outdir}/final_results", mode: 'copy'
    
    input:
    val mutation_genes_list
    val repaired_genes_list

    output:
    path "missing_genes.txt", emit: missing_genes_file

    script:
    def mutation_genes_str = mutation_genes_list.collect { "'${it}'" }.join(', ')
    def repaired_genes_str = repaired_genes_list.collect { "'${it}'" }.join(', ')
    """
    #!/usr/bin/env python3
    
    mutation_genes = [${mutation_genes_str}]
    repaired_genes = [${repaired_genes_str}]
    
    # Find missing genes
    missing_genes = [gene for gene in mutation_genes if gene not in repaired_genes]
    
    # Write to file
    with open('missing_genes.txt', 'w') as f:
        f.write("# Genes with missing structure files\\n")
        f.write("# Generated by FoldX workflow\\n")
        f.write(f"# Total missing genes: {len(missing_genes)}\\n")
        f.write("\\n")
        
        if missing_genes:
            f.write("Gene_Name\\n")
            for gene in missing_genes:
                f.write(f"{gene}\\n")
                print(f"WARNING: No structure file found for gene: {gene} - skipping all mutations for this gene")
        else:
            f.write("No missing genes found - all genes had corresponding structure files.\\n")
        
        f.write("\\n")
        f.write("# End of file\\n")
    """
}