// Nextflow configuration
wave {
    enabled = true
    strategy = ['conda', 'container']
}

conda {
    enabled = true
    channels = ['conda-forge', 'bioconda', 'defaults']
}

// Use Apptainer instead of Singularity
apptainer {
    enabled = true
    autoMounts = true
}

// Remove Singularity configuration
// singularity {
//     enabled = true
//     autoMounts = true
// }

params {
    // Input parameters
    mutation_csv = null
    foldx_path = "FoldX"
    structure_dir = "./structures"
    outdir = "results"
    
    // FoldX parameters
    chain = 'A'
    number_of_runs = 1
    
    // Help message
    help = false
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Process configuration
process {
    withName: 'PARSE_FXOUT' {
        conda = "conda-forge::pandas=2.0.3"
    }
    withName: 'GENERATE_MUTATION_FILES' {
        conda = "conda-forge::pandas=2.0.3"
    }
    withName: 'REPAIR_STRUCTURES' {
        container = "docker://bumproo/foldx5"
    }
    withName: 'RUN_BUILDMODEL' {
        container = "docker://bumproo/foldx5"
    }
    withName: 'CALCULATE_DDG' {
        conda = "conda-forge::pandas=2.0.3"
    }
}

// Capture Nextflow log files
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}
trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
}